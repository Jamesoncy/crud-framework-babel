{"version":3,"sources":["../../app/system/Model.js"],"names":["Model","connection","table","fields","where","field","value","sql","_","each","values","push","join","execute","data","ignore","setVal","val","fld","condition","connectdb","conn","queryAsync","console","log","Database","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,K;;;AACL,kBAAa;AAAA;AAAA;AAEZ;;AAED;;;;;;;;;;;wGAMaC,U,EAAWC,K;QAAMC,M,uEAAO,G;QAAIC,K,uEAAM,E;;;;;;AAC1CC,a,GAAQ,E,EAAIC,K,GAAQ,E,EACxBC,G,eAAgBJ,M,cAAeD,K;;cAC5BE,SAAS,E;;;;;;eACLI,iBAAEC,IAAF,CAAOL,KAAP,EAAc,UAASM,MAAT,EAAgBP,MAAhB,EAAuB;AAC1CE,eAAMM,IAAN,CAAWR,SAAS,MAApB;AACAG,eAAMK,IAAN,CAAWD,MAAX;AACA,SAHK,C;;;AAINH,0BAAgBF,MAAMO,IAAN,CAAW,OAAX,CAAhB;;;;eAEY,KAAKC,OAAL,CAAaZ,UAAb,EAAwBM,GAAxB,EAA4BD,KAA5B,C;;;;;;;;;;;;;;;;;;;AAEd;;;;;;;;;;0GAMaL,U,EAAWC,K,EAAMY,I;QAAKC,M,uEAAO,K;;;;;;AACrCV,a,GAAQ,E,EAAIW,M,GAAS,E,EAAIN,M,GAAS,E;;eAChCF,iBAAEC,IAAF,CAAOK,IAAP,EAAa,UAASG,GAAT,EAAcC,GAAd,EAAkB;AACpCb,eAAMM,IAAN,CAAWO,GAAX;AACAF,gBAAOL,IAAP,CAAY,GAAZ;AACAD,gBAAOC,IAAP,CAAYM,GAAZ;AACA,SAJK,C;;;AAKFV,W,gBAAiBQ,UAAU,KAAX,GAAoB,EAApB,GAAyB,Q,eAAiBb,K,UAAUG,MAAMO,IAAN,CAAW,GAAX,C,kBAA4BI,M;;eACvF,KAAKH,OAAL,CAAaZ,UAAb,EAAyBM,GAAzB,EAA8BG,MAA9B,C;;;;;;;;;;;;;;;;;;;AAEd;;;;;;;;;;0GAMaT,U,EAAWC,K,EAAMiB,S,EAAUL,I;;;;;;AACnCT,a,GAAQ,E,EAAIW,M,GAAS,E,EAAIN,M,GAAS,E,EAAIN,K,GAAM,E;;eAC1CI,iBAAEC,IAAF,CAAOK,IAAP,EAAa,UAASG,GAAT,EAAcC,GAAd,EAAkB;AACpCb,eAAMM,IAAN,CAAWO,MAAM,MAAjB;AACAR,gBAAOC,IAAP,CAAYM,GAAZ;AACA,SAHK,C;;;;eAIAT,iBAAEC,IAAF,CAAOU,SAAP,EAAkB,UAASF,GAAT,EAAcC,GAAd,EAAkB;AACzCd,eAAMO,IAAN,CAAWO,MAAM,MAAjB;AACAR,gBAAOC,IAAP,CAAYM,GAAZ;AACA,SAHK,C;;;AAIFV,W,eAAgBL,K,aAAaG,MAAMO,IAAN,CAAW,GAAX,C,eAAyBR,MAAMQ,IAAN,CAAW,OAAX,C;;eAC7C,KAAKC,OAAL,CAAaZ,UAAb,EAAyBM,GAAzB,EAA8BG,MAA9B,C;;;;;;;;;;;;;;;;;;;;;;0GAGFT,U,EAAWM,G;QAAIG,M,uEAAO,I;;;;;;eACpB,KAAKG,OAAL,CAAaZ,UAAb,EAAwBM,GAAxB,EAA4BG,MAA5B,C;;;;;;;;;;;;;;;;;;;;;;0GAGAT,U,EAAWM,G;QAAID,K,uEAAM,I;;;;;;;;eAEhB,KAAKc,SAAL,CAAenB,UAAf,C;;;AAAboB,Y;;cACDf,SAAS,I;;;;;;eAEEe,KAAKC,UAAL,CAAgBf,GAAhB,C;;;;;;;eAGAc,KAAKC,UAAL,CAAgBf,GAAhB,EAAoBD,KAApB,C;;;;;;;;;;;;;AAGdiB,gBAAQC,GAAR;0CACO,K;;;;;;;;;;;;;;;;;;EA3EUC,kB;;AAgFpBC,OAAOC,OAAP,GAAiB3B,KAAjB","file":"Model.js","sourcesContent":["import Database from './Database'\r\nimport _ from 'lodash'\r\n\r\nclass Model extends Database {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param fields string \r\n\t\t@param where json \r\n\t*/\r\n\tasync select(connection,table,fields='*',where=\"\"){\r\n\t\tlet field = [], value = [],\r\n\t\tsql = `SELECT ${fields} FROM ${table} `\r\n\t\tif(where != \"\"){\r\n\t\t\tawait _.each(where, function(values,fields){\r\n\t\t\t\tfield.push(fields + ' = ?')\r\n\t\t\t\tvalue.push(values)\r\n\t\t\t})\r\n\t\t\tsql += `WHERE ${field.join(' AND ')}`\r\n\t\t}\r\n\t\treturn await this.execute(connection,sql,value)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param data json \r\n\t\t@param ignore boolean \r\n\t*/\r\n\tasync insert(connection,table,data,ignore=false){\r\n\t\tlet field = [], setVal = [], values = []\r\n\t\tawait _.each(data, function(val, fld){\r\n\t\t\tfield.push(fld)\r\n\t\t\tsetVal.push('?')\t\t\t\r\n\t\t\tvalues.push(val)\t\t\t\r\n\t\t})\r\n\t\tlet sql = `INSERT ${(ignore == false) ? \"\" : \"IGNORE\"} INTO ${table} (${field.join(',')}) VALUES (${setVal})`\r\n\t\treturn await this.execute(connection, sql, values)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param condition json \r\n\t\t@param data json \r\n\t*/\r\n\tasync update(connection,table,condition,data){\r\n\t\tlet field = [], setVal = [], values = [], where=[]\r\n\t\tawait _.each(data, function(val, fld){\r\n\t\t\tfield.push(fld + \" = ?\")\r\n\t\t\tvalues.push(val)\t\t\t\r\n\t\t})\r\n\t\tawait _.each(condition, function(val, fld){\r\n\t\t\twhere.push(fld + ' = ?')\r\n\t\t\tvalues.push(val) \t\t\t\r\n\t\t})\r\n\t\tlet sql = `UPDATE ${table} SET ${field.join(',')} WHERE ${where.join(' AND ')}`\r\n\t\treturn await this.execute(connection, sql, values)\r\n\t}\r\n\r\n\tasync query(connection,sql,values=null){\r\n\t\treturn await this.execute(connection,sql,values)\r\n\t}\r\n\r\n\tasync execute(connection,sql,value=null){\r\n\t\ttry{\r\n\t\t\tlet conn = await this.connectdb(connection)\r\n\t\t\tif(value == null){\r\n\t\t\t\t//mssql\r\n\t\t\t\treturn await conn.queryAsync(sql)\r\n\t\t\t}else{\r\n\t\t\t\t//mysql\r\n\t\t\t\treturn await conn.queryAsync(sql,value)\r\n\t\t\t}\r\n\t\t}catch(err){\r\n\t\t\tconsole.log(err)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = Model"]}